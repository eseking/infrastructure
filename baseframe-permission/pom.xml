<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
   <parent>
  	<groupId>com.bsoft.baseframe</groupId>
  	<artifactId>baseframe-parent</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  </parent>
  <groupId>com.bsoft.baseFrame</groupId>
  <artifactId>baseframe-permission</artifactId>
  <packaging>war</packaging>
  <name>baseframe-permission Maven Webapp</name>
  <url>http://maven.apache.org</url>
   <dependencies>
   <dependency>
      <groupId>com.bsoft.baseframe</groupId>
      <artifactId>baseframe-service</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>com.bsoft.baseframe</groupId>
      <artifactId>baseframe-utils</artifactId>
      <version>0.0.1-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
    </dependency>
     <dependency>
		<groupId>org.springframework</groupId>
		<artifactId>spring-test</artifactId>
	</dependency>
	<dependency>
	  <groupId>com.google.code</groupId>
	  <artifactId>kaptcha</artifactId>
	  <version>2.3.2</version>
	</dependency>
	<!-- provided 需要指定 -->
	<dependency>
		<groupId>org.mortbay.jetty</groupId>
		<artifactId>servlet-api-2.5</artifactId>
		<scope>provided</scope>
	</dependency>
	

  </dependencies>
 
  <build>

	 <resources> 
		 <resource>  
			<directory>src/main/resources</directory>  
			<filtering>true</filtering>   
		  <!--  部署时不包含以下文件  --> 
			<excludes>  
				<exclude>**/*.xml</exclude> 
				<exclude>**/*.properties</exclude>
			</excludes>
			
		</resource> 
	  </resources>


  <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
				<attachClasses>true</attachClasses><!-- 把class打包jar作为附件 -->
				<archiveClasses>true</archiveClasses><!-- 把class打包jar -->
				</configuration>
			</plugin>
			
			
			
			
			<!-- 配置 maven 的 jetty 插件 -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>7.2.2.v20101205</version>
				<configuration>
				      
					<webAppConfig>
						<contextPath> /${project.artifactId}</contextPath>	<!--  指定 root context 在这里指定为${project.artifactId} 即 testPermission，
						那么访问时就用http://localized:8080/testPermission 访问，
						如果指定梶为test 就用http://localized:8080/test访问，更多信息，请查看jetty 插件官方文档-->
						
						<allowDuplicateFragmentNames>true</allowDuplicateFragmentNames>
					</webAppConfig>
					<!-- 指定额外需要监控变化的文件或文件夹，主要用于热部署中的识别文件更新 -->
					<scanTargetPatterns>
						<scanTargetPattern>
							<directory>src</directory>
							<includes>
								<include>**/*.java</include>
								<include>**/*.properties</include>
							</includes>
							<!-- <excludes> <exclude>**/*.xml</exclude> <exclude>**/myspecial.properties</exclude>
								</excludes> -->
						</scanTargetPattern>
					</scanTargetPatterns>
					<scanIntervalSeconds>0</scanIntervalSeconds><!-- 指定监控的扫描时间间隔，0为关闭jetty自身的热部署，主要是为了使用jrebel -->
					<webAppSourceDirectory>${basedir}/src/main/webapp</webAppSourceDirectory><!-- 指定web页面的文件夹 -->
				
					 <connectors>
				       <connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
				          <port>9090</port>
				          <maxIdleTime>60000</maxIdleTime>
				       </connector>
				     </connectors>
				
				</configuration>
			</plugin>

			<!-- jerebel maven 插件，用于生成jrebel.xml -->
			<plugin>
				<groupId>org.zeroturnaround</groupId>
				<artifactId>jrebel-maven-plugin</artifactId>
				<version>1.1.5</version>
				<executions>
					<execution>
						<id>generate-rebel-xml</id>
						<phase>process-resources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
				<rebelXmlDirectory>${basedir}/src/main/webapp/WEB-INF/classes</rebelXmlDirectory><!-- 指定生成的jrebel.xml放在哪里，
				要求放在web应用的 classpath下 -->
				</configuration>
			</plugin>
			
			
			<!-- 跳过测试 -->
			 <plugin>
	        	<groupId>org.apache.maven.plugins</groupId>
	        	<artifactId>maven-surefire-plugin</artifactId>
	        	<version>2.5</version>
	        	<configuration>
	         		 <skip>true</skip>
	        	</configuration>
     		 </plugin>
			
			
  </plugins>
    <finalName>baseframe-permission</finalName>
 
  </build>
	 
</project>
			
			
			

